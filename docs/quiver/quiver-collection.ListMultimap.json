{"name":"ListMultimap","qualifiedName":"quiver/quiver-collection.ListMultimap","comment":"<p>A multimap implementation that uses <a>quiver/dart-core.List</a>s to store the values associated\nwith each key.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"quiver/quiver-collection.ListMultimap.ListMultimap-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"operators":{"[]":{"name":"[]","qualifiedName":"quiver/quiver-collection.ListMultimap.[]","comment":"","commentFrom":"quiver-collection._BaseMultimap.[]","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"quiver/quiver-collection.ListMultimap.V","inner":[]}]}],"parameters":{"key":{"name":"key","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"removeAll":{"name":"removeAll","qualifiedName":"quiver/quiver-collection.ListMultimap.removeAll","comment":"","commentFrom":"quiver-collection._BaseMultimap.removeAll","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"quiver/quiver-collection.ListMultimap.V","inner":[]}]}],"parameters":{"key":{"name":"key","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"toMap":{"name":"toMap","qualifiedName":"quiver/quiver-collection.ListMultimap.toMap","comment":"<p>Returns a copy of this multimap as a map.</p>","commentFrom":"quiver-collection.Multimap.toMap","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Map","inner":[{"outer":"quiver/quiver-collection.ListMultimap.K","inner":[]},{"outer":"dart-core.List","inner":[{"outer":"quiver/quiver-collection.ListMultimap.V","inner":[]}]}]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"quiver/quiver-collection.ListMultimap.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>quiver/quiver-collection.ListMultimap.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"quiver/quiver-collection.ListMultimap.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"keys":{"name":"keys","qualifiedName":"quiver/quiver-collection.ListMultimap.keys","comment":"<p>The keys of this.</p>","commentFrom":"quiver-collection.Multimap.keys","inheritedFrom":"quiver-collection._BaseMultimap.keys","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"quiver/quiver-collection.SetMultimap.K","inner":[]}]}],"parameters":{},"annotations":[]},"values":{"name":"values","qualifiedName":"quiver/quiver-collection.ListMultimap.values","comment":"<p>The values of this.</p>","commentFrom":"quiver-collection.Multimap.values","inheritedFrom":"quiver-collection._BaseMultimap.values","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"quiver/quiver-collection.SetMultimap.V","inner":[]}]}],"parameters":{},"annotations":[]},"length":{"name":"length","qualifiedName":"quiver/quiver-collection.ListMultimap.length","comment":"<p>The number of keys in the multimap.</p>","commentFrom":"quiver-collection.Multimap.length","inheritedFrom":"quiver-collection._BaseMultimap.length","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"isEmpty":{"name":"isEmpty","qualifiedName":"quiver/quiver-collection.ListMultimap.isEmpty","comment":"<p>Returns true if there is no key in the multimap.</p>","commentFrom":"quiver-collection.Multimap.isEmpty","inheritedFrom":"quiver-collection._BaseMultimap.isEmpty","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"isNotEmpty":{"name":"isNotEmpty","qualifiedName":"quiver/quiver-collection.ListMultimap.isNotEmpty","comment":"<p>Returns true if there is at least one key in the multimap.</p>","commentFrom":"quiver-collection.Multimap.isNotEmpty","inheritedFrom":"quiver-collection._BaseMultimap.isNotEmpty","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"quiver/quiver-collection.ListMultimap.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>quiver/quiver-collection.ListMultimap.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>quiver/quiver-collection.ListMultimap.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"[]":{"name":"[]","qualifiedName":"quiver/quiver-collection.ListMultimap.[]","comment":"<p>Returns the values for the given <a>quiver/quiver-collection.ListMultimap.[].key</a>. An empty iterable is returned if\n<a>quiver/quiver-collection.ListMultimap.[].key</a> is not mapped. The returned collection is a view on the multimap.\nUpdates to the collection modify the multimap and likewise, modifications\nto the multimap are reflected in the returned collection.</p>","commentFrom":"quiver-collection.Multimap.[]","inheritedFrom":"quiver-collection._BaseMultimap.[]","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"quiver/quiver-collection.SetMultimap.V","inner":[]}]}],"parameters":{"key":{"name":"key","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"quiver/quiver-collection.ListMultimap.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"quiver/quiver-collection.ListMultimap.noSuchMethod","comment":"<p><a>quiver/quiver-collection.ListMultimap.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>quiver/quiver-collection.ListMultimap.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>quiver/quiver-collection.ListMultimap.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>quiver/quiver-collection.ListMultimap.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"containsValue":{"name":"containsValue","qualifiedName":"quiver/quiver-collection.ListMultimap.containsValue","comment":"<p>Returns whether this multimap contains the given <a>quiver/quiver-collection.ListMultimap.containsValue.value</a>.</p>","commentFrom":"quiver-collection.Multimap.containsValue","inheritedFrom":"quiver-collection._BaseMultimap.containsValue","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"containsKey":{"name":"containsKey","qualifiedName":"quiver/quiver-collection.ListMultimap.containsKey","comment":"<p>Returns whether this multimap contains the given <a>quiver/quiver-collection.ListMultimap.containsKey.key</a>.</p>","commentFrom":"quiver-collection.Multimap.containsKey","inheritedFrom":"quiver-collection._BaseMultimap.containsKey","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"key":{"name":"key","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"add":{"name":"add","qualifiedName":"quiver/quiver-collection.ListMultimap.add","comment":"<p>Adds an association from the given key to the given value.</p>","commentFrom":"quiver-collection.Multimap.add","inheritedFrom":"quiver-collection._BaseMultimap.add","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"key":{"name":"key","optional":false,"named":false,"default":false,"type":[{"outer":"quiver/quiver-collection._BaseMultimap.K","inner":[]}],"value":"null","annotations":[]},"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"quiver/quiver-collection._BaseMultimap.V","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"addValues":{"name":"addValues","qualifiedName":"quiver/quiver-collection.ListMultimap.addValues","comment":"<p>Adds an association from the given key to each of the given values.</p>","commentFrom":"quiver-collection.Multimap.addValues","inheritedFrom":"quiver-collection._BaseMultimap.addValues","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"key":{"name":"key","optional":false,"named":false,"default":false,"type":[{"outer":"quiver/quiver-collection._BaseMultimap.K","inner":[]}],"value":"null","annotations":[]},"values":{"name":"values","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Iterable","inner":[{"outer":"quiver/quiver-collection._BaseMultimap.V","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]},"addAll":{"name":"addAll","qualifiedName":"quiver/quiver-collection.ListMultimap.addAll","comment":"<p>Adds all associations of <a>quiver/quiver-collection.ListMultimap.addAll.other</a> to this multimap.</p>\n<p>The operation is equivalent to doing <code>this[key] = value</code> for each key\nand associated value in other. It iterates over <a>quiver/quiver-collection.ListMultimap.addAll.other</a>, which must\ntherefore not change during the iteration.</p>\n<p>This implementation iterates through each key of <a>quiver/quiver-collection.ListMultimap.addAll.other</a> and adds the\nassociated values to this instance via <a>quiver/quiver-collection.ListMultimap.addValues</a>.</p>","commentFrom":"","inheritedFrom":"quiver-collection._BaseMultimap.addAll","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"quiver/quiver-collection.Multimap","inner":[{"outer":"quiver/quiver-collection._BaseMultimap.K","inner":[]},{"outer":"quiver/quiver-collection._BaseMultimap.V","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]},"remove":{"name":"remove","qualifiedName":"quiver/quiver-collection.ListMultimap.remove","comment":"<p>Removes the association between the given <a>quiver/quiver-collection.ListMultimap.remove.key</a> and <a>quiver/quiver-collection.ListMultimap.remove.value</a>. Returns\n<code>true</code> if the association existed, <code>false</code> otherwise.</p>","commentFrom":"quiver-collection.Multimap.remove","inheritedFrom":"quiver-collection._BaseMultimap.remove","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"key":{"name":"key","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":"null","annotations":[]},"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"quiver/quiver-collection._BaseMultimap.V","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"removeAll":{"name":"removeAll","qualifiedName":"quiver/quiver-collection.ListMultimap.removeAll","comment":"<p>Removes the association for the given <a>quiver/quiver-collection.ListMultimap.removeAll.key</a>. Returns the collection of\nremoved values, or an empty iterable if <a>quiver/quiver-collection.ListMultimap.removeAll.key</a> was unmapped.</p>","commentFrom":"quiver-collection.Multimap.removeAll","inheritedFrom":"quiver-collection._BaseMultimap.removeAll","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"quiver/quiver-collection.SetMultimap.V","inner":[]}]}],"parameters":{"key":{"name":"key","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"clear":{"name":"clear","qualifiedName":"quiver/quiver-collection.ListMultimap.clear","comment":"<p>Removes all data from the multimap.</p>","commentFrom":"quiver-collection.Multimap.clear","inheritedFrom":"quiver-collection._BaseMultimap.clear","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"forEachKey":{"name":"forEachKey","qualifiedName":"quiver/quiver-collection.ListMultimap.forEachKey","comment":"<p>Applies <a>quiver/quiver-collection.ListMultimap.forEachKey.f</a> to each {key, Iterable&lt;value>} pair of the multimap.</p>\n<p>It is an error to add or remove keys from the map during iteration.</p>","commentFrom":"quiver-collection.Multimap.forEachKey","inheritedFrom":"quiver-collection._BaseMultimap.forEachKey","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"forEach":{"name":"forEach","qualifiedName":"quiver/quiver-collection.ListMultimap.forEach","comment":"<p>Applies <a>quiver/quiver-collection.ListMultimap.forEach.f</a> to each {key, value} pair of the multimap.</p>\n<p>It is an error to add or remove keys from the map during iteration.</p>","commentFrom":"quiver-collection.Multimap.forEach","inheritedFrom":"quiver-collection._BaseMultimap.forEach","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"f":{"name":"f","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"toMap":{"name":"toMap","qualifiedName":"quiver/quiver-collection.ListMultimap.toMap","comment":"<p>Returns a copy of this multimap as a map.</p>","commentFrom":"","inheritedFrom":"quiver-collection.Multimap.toMap","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.Map","inner":[{"outer":"quiver/quiver-collection.SetMultimap.K","inner":[]},{"outer":"dart-core.Iterable","inner":[{"outer":"quiver/quiver-collection.SetMultimap.V","inner":[]}]}]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{"K":{"name":"K","type":"dart.core.Object"},"V":{"name":"V","type":"dart.core.Object"}}}